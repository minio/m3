// Code generated by go-swagger; DO NOT EDIT.

package public_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// MakeBucketHandlerFunc turns a function with the right signature into a make bucket handler
type MakeBucketHandlerFunc func(MakeBucketParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MakeBucketHandlerFunc) Handle(params MakeBucketParams) middleware.Responder {
	return fn(params)
}

// MakeBucketHandler interface for that can handle valid make bucket params
type MakeBucketHandler interface {
	Handle(MakeBucketParams) middleware.Responder
}

// NewMakeBucket creates a new http.Handler for the make bucket operation
func NewMakeBucket(ctx *middleware.Context, handler MakeBucketHandler) *MakeBucket {
	return &MakeBucket{Context: ctx, Handler: handler}
}

/*MakeBucket swagger:route POST /api/v1/buckets PublicAPI makeBucket

Make a bucket

*/
type MakeBucket struct {
	Context *middleware.Context
	Handler MakeBucketHandler
}

func (o *MakeBucket) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMakeBucketParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
