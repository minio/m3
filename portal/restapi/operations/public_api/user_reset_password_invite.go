// Code generated by go-swagger; DO NOT EDIT.

package public_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UserResetPasswordInviteHandlerFunc turns a function with the right signature into a user reset password invite handler
type UserResetPasswordInviteHandlerFunc func(UserResetPasswordInviteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UserResetPasswordInviteHandlerFunc) Handle(params UserResetPasswordInviteParams) middleware.Responder {
	return fn(params)
}

// UserResetPasswordInviteHandler interface for that can handle valid user reset password invite params
type UserResetPasswordInviteHandler interface {
	Handle(UserResetPasswordInviteParams) middleware.Responder
}

// NewUserResetPasswordInvite creates a new http.Handler for the user reset password invite operation
func NewUserResetPasswordInvite(ctx *middleware.Context, handler UserResetPasswordInviteHandler) *UserResetPasswordInvite {
	return &UserResetPasswordInvite{Context: ctx, Handler: handler}
}

/*UserResetPasswordInvite swagger:route POST /api/v1/users/reset_invite PublicAPI userResetPasswordInvite

Sends an email invitation for resetting a user's password

*/
type UserResetPasswordInvite struct {
	Context *middleware.Context
	Handler UserResetPasswordInviteHandler
}

func (o *UserResetPasswordInvite) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUserResetPasswordInviteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
