// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public_api.proto

package m3

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Access int32

const (
	Access_PRIVATE Access = 0
	Access_PUBLIC  Access = 1
	Access_CUSTOM  Access = 2
)

var Access_name = map[int32]string{
	0: "PRIVATE",
	1: "PUBLIC",
	2: "CUSTOM",
}

var Access_value = map[string]int32{
	"PRIVATE": 0,
	"PUBLIC":  1,
	"CUSTOM":  2,
}

func (x Access) String() string {
	return proto.EnumName(Access_name, int32(x))
}

func (Access) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{0}
}

// Empty message for services that rely on headers
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// Message containing details of the Tenant Admin and the tenant that is going to be created
type RegisterAccountRequest struct {
	FullName             string   `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	CompanyShortName     string   `protobuf:"bytes,3,opt,name=company_short_name,json=companyShortName,proto3" json:"company_short_name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterAccountRequest) Reset()         { *m = RegisterAccountRequest{} }
func (m *RegisterAccountRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterAccountRequest) ProtoMessage()    {}
func (*RegisterAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{1}
}

func (m *RegisterAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAccountRequest.Unmarshal(m, b)
}
func (m *RegisterAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAccountRequest.Marshal(b, m, deterministic)
}
func (m *RegisterAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAccountRequest.Merge(m, src)
}
func (m *RegisterAccountRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterAccountRequest.Size(m)
}
func (m *RegisterAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAccountRequest proto.InternalMessageInfo

func (m *RegisterAccountRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *RegisterAccountRequest) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *RegisterAccountRequest) GetCompanyShortName() string {
	if m != nil {
		return m.CompanyShortName
	}
	return ""
}

func (m *RegisterAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Response on whether the account was created or not
type RegisterAccountResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	JwtToken             string   `protobuf:"bytes,2,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterAccountResponse) Reset()         { *m = RegisterAccountResponse{} }
func (m *RegisterAccountResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterAccountResponse) ProtoMessage()    {}
func (*RegisterAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{2}
}

func (m *RegisterAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAccountResponse.Unmarshal(m, b)
}
func (m *RegisterAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAccountResponse.Marshal(b, m, deterministic)
}
func (m *RegisterAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAccountResponse.Merge(m, src)
}
func (m *RegisterAccountResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterAccountResponse.Size(m)
}
func (m *RegisterAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAccountResponse proto.InternalMessageInfo

func (m *RegisterAccountResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RegisterAccountResponse) GetJwtToken() string {
	if m != nil {
		return m.JwtToken
	}
	return ""
}

type LoginRequest struct {
	Company              string   `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{3}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	JwtToken             string   `protobuf:"bytes,2,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{4}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *LoginResponse) GetJwtToken() string {
	if m != nil {
		return m.JwtToken
	}
	return ""
}

// Used for Signing Up a new User and Resetting a Password
type SetPasswordRequest struct {
	UrlToken             string   `protobuf:"bytes,1,opt,name=url_token,json=urlToken,proto3" json:"url_token,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPasswordRequest) Reset()         { *m = SetPasswordRequest{} }
func (m *SetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*SetPasswordRequest) ProtoMessage()    {}
func (*SetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{5}
}

func (m *SetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPasswordRequest.Unmarshal(m, b)
}
func (m *SetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *SetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPasswordRequest.Merge(m, src)
}
func (m *SetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_SetPasswordRequest.Size(m)
}
func (m *SetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPasswordRequest proto.InternalMessageInfo

func (m *SetPasswordRequest) GetUrlToken() string {
	if m != nil {
		return m.UrlToken
	}
	return ""
}

func (m *SetPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ChangePasswordRequest struct {
	OldPassword          string   `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{6}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// Sends an invite to signup a new user or reset a user's password
type InviteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviteRequest) Reset()         { *m = InviteRequest{} }
func (m *InviteRequest) String() string { return proto.CompactTextString(m) }
func (*InviteRequest) ProtoMessage()    {}
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{7}
}

func (m *InviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteRequest.Unmarshal(m, b)
}
func (m *InviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteRequest.Marshal(b, m, deterministic)
}
func (m *InviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteRequest.Merge(m, src)
}
func (m *InviteRequest) XXX_Size() int {
	return xxx_messageInfo_InviteRequest.Size(m)
}
func (m *InviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InviteRequest proto.InternalMessageInfo

func (m *InviteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InviteRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ValidateInviteRequest struct {
	UrlToken             string   `protobuf:"bytes,1,opt,name=url_token,json=urlToken,proto3" json:"url_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateInviteRequest) Reset()         { *m = ValidateInviteRequest{} }
func (m *ValidateInviteRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateInviteRequest) ProtoMessage()    {}
func (*ValidateInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{8}
}

func (m *ValidateInviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateInviteRequest.Unmarshal(m, b)
}
func (m *ValidateInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateInviteRequest.Marshal(b, m, deterministic)
}
func (m *ValidateInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateInviteRequest.Merge(m, src)
}
func (m *ValidateInviteRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateInviteRequest.Size(m)
}
func (m *ValidateInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateInviteRequest proto.InternalMessageInfo

func (m *ValidateInviteRequest) GetUrlToken() string {
	if m != nil {
		return m.UrlToken
	}
	return ""
}

// Once token invite is validates we return the email and company to proceed with the Signup
type ValidateEmailInviteResponse struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateEmailInviteResponse) Reset()         { *m = ValidateEmailInviteResponse{} }
func (m *ValidateEmailInviteResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateEmailInviteResponse) ProtoMessage()    {}
func (*ValidateEmailInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{9}
}

func (m *ValidateEmailInviteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateEmailInviteResponse.Unmarshal(m, b)
}
func (m *ValidateEmailInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateEmailInviteResponse.Marshal(b, m, deterministic)
}
func (m *ValidateEmailInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateEmailInviteResponse.Merge(m, src)
}
func (m *ValidateEmailInviteResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateEmailInviteResponse.Size(m)
}
func (m *ValidateEmailInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateEmailInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateEmailInviteResponse proto.InternalMessageInfo

func (m *ValidateEmailInviteResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ValidateEmailInviteResponse) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

// A request for metrics on the authenticated tenant
type MetricsRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsRequest) Reset()         { *m = MetricsRequest{} }
func (m *MetricsRequest) String() string { return proto.CompactTextString(m) }
func (*MetricsRequest) ProtoMessage()    {}
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{10}
}

func (m *MetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsRequest.Unmarshal(m, b)
}
func (m *MetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsRequest.Marshal(b, m, deterministic)
}
func (m *MetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsRequest.Merge(m, src)
}
func (m *MetricsRequest) XXX_Size() int {
	return xxx_messageInfo_MetricsRequest.Size(m)
}
func (m *MetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsRequest proto.InternalMessageInfo

func (m *MetricsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Usage per day
type MetricsDayUsage struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Usage                uint64   `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsDayUsage) Reset()         { *m = MetricsDayUsage{} }
func (m *MetricsDayUsage) String() string { return proto.CompactTextString(m) }
func (*MetricsDayUsage) ProtoMessage()    {}
func (*MetricsDayUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{11}
}

func (m *MetricsDayUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsDayUsage.Unmarshal(m, b)
}
func (m *MetricsDayUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsDayUsage.Marshal(b, m, deterministic)
}
func (m *MetricsDayUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsDayUsage.Merge(m, src)
}
func (m *MetricsDayUsage) XXX_Size() int {
	return xxx_messageInfo_MetricsDayUsage.Size(m)
}
func (m *MetricsDayUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsDayUsage.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsDayUsage proto.InternalMessageInfo

func (m *MetricsDayUsage) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *MetricsDayUsage) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

// Capacity related metrics
type MetricsResponse struct {
	// total number of buckets on the account
	TotalBuckets uint64 `protobuf:"varint,1,opt,name=total_buckets,json=totalBuckets,proto3" json:"total_buckets,omitempty"`
	// A number of bytes representing the total usage on the account
	TotalUsage uint64 `protobuf:"varint,2,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	// Cost per usage
	TotalCost int32 `protobuf:"varint,3,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	// daily usage
	DailyUsage []*MetricsDayUsage `protobuf:"bytes,4,rep,name=daily_usage,json=dailyUsage,proto3" json:"daily_usage,omitempty"`
	// flag to decide to show cost or not on UI
	ShowCost             bool     `protobuf:"varint,5,opt,name=show_cost,json=showCost,proto3" json:"show_cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{12}
}

func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (m *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(m, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetTotalBuckets() uint64 {
	if m != nil {
		return m.TotalBuckets
	}
	return 0
}

func (m *MetricsResponse) GetTotalUsage() uint64 {
	if m != nil {
		return m.TotalUsage
	}
	return 0
}

func (m *MetricsResponse) GetTotalCost() int32 {
	if m != nil {
		return m.TotalCost
	}
	return 0
}

func (m *MetricsResponse) GetDailyUsage() []*MetricsDayUsage {
	if m != nil {
		return m.DailyUsage
	}
	return nil
}

func (m *MetricsResponse) GetShowCost() bool {
	if m != nil {
		return m.ShowCost
	}
	return false
}

// Networking related metrics
type NetworkMetrics struct {
	// Current period amount of egress
	CurrentEgress        int64    `protobuf:"varint,1,opt,name=current_egress,json=currentEgress,proto3" json:"current_egress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkMetrics) Reset()         { *m = NetworkMetrics{} }
func (m *NetworkMetrics) String() string { return proto.CompactTextString(m) }
func (*NetworkMetrics) ProtoMessage()    {}
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{13}
}

func (m *NetworkMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkMetrics.Unmarshal(m, b)
}
func (m *NetworkMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkMetrics.Marshal(b, m, deterministic)
}
func (m *NetworkMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkMetrics.Merge(m, src)
}
func (m *NetworkMetrics) XXX_Size() int {
	return xxx_messageInfo_NetworkMetrics.Size(m)
}
func (m *NetworkMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkMetrics proto.InternalMessageInfo

func (m *NetworkMetrics) GetCurrentEgress() int64 {
	if m != nil {
		return m.CurrentEgress
	}
	return 0
}

// Request what buckets the current tenant user can see
type ListBucketsRequest struct {
	SortBy string `protobuf:"bytes,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// a query to filter buckets with
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBucketsRequest) Reset()         { *m = ListBucketsRequest{} }
func (m *ListBucketsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBucketsRequest) ProtoMessage()    {}
func (*ListBucketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{14}
}

func (m *ListBucketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBucketsRequest.Unmarshal(m, b)
}
func (m *ListBucketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBucketsRequest.Marshal(b, m, deterministic)
}
func (m *ListBucketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBucketsRequest.Merge(m, src)
}
func (m *ListBucketsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBucketsRequest.Size(m)
}
func (m *ListBucketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBucketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBucketsRequest proto.InternalMessageInfo

func (m *ListBucketsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListBucketsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListBucketsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListBucketsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListBucketsResponse struct {
	// if any error, like user not allowed to list buckets
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// list of resulting buckets
	Buckets []*Bucket `protobuf:"bytes,2,rep,name=buckets,proto3" json:"buckets,omitempty"`
	// number of buckets accessible to tenant user
	TotalBuckets         int32    `protobuf:"varint,3,opt,name=total_buckets,json=totalBuckets,proto3" json:"total_buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBucketsResponse) Reset()         { *m = ListBucketsResponse{} }
func (m *ListBucketsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBucketsResponse) ProtoMessage()    {}
func (*ListBucketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{15}
}

func (m *ListBucketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBucketsResponse.Unmarshal(m, b)
}
func (m *ListBucketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBucketsResponse.Marshal(b, m, deterministic)
}
func (m *ListBucketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBucketsResponse.Merge(m, src)
}
func (m *ListBucketsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBucketsResponse.Size(m)
}
func (m *ListBucketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBucketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBucketsResponse proto.InternalMessageInfo

func (m *ListBucketsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListBucketsResponse) GetBuckets() []*Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *ListBucketsResponse) GetTotalBuckets() int32 {
	if m != nil {
		return m.TotalBuckets
	}
	return 0
}

type Bucket struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Access               Access   `protobuf:"varint,3,opt,name=access,proto3,enum=m3.Access" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{16}
}

func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bucket) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Bucket) GetAccess() Access {
	if m != nil {
		return m.Access
	}
	return Access_PRIVATE
}

type MakeBucketRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Access               Access   `protobuf:"varint,2,opt,name=access,proto3,enum=m3.Access" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeBucketRequest) Reset()         { *m = MakeBucketRequest{} }
func (m *MakeBucketRequest) String() string { return proto.CompactTextString(m) }
func (*MakeBucketRequest) ProtoMessage()    {}
func (*MakeBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{17}
}

func (m *MakeBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeBucketRequest.Unmarshal(m, b)
}
func (m *MakeBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeBucketRequest.Marshal(b, m, deterministic)
}
func (m *MakeBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeBucketRequest.Merge(m, src)
}
func (m *MakeBucketRequest) XXX_Size() int {
	return xxx_messageInfo_MakeBucketRequest.Size(m)
}
func (m *MakeBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeBucketRequest proto.InternalMessageInfo

func (m *MakeBucketRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MakeBucketRequest) GetAccess() Access {
	if m != nil {
		return m.Access
	}
	return Access_PRIVATE
}

type DeleteBucketRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBucketRequest) Reset()         { *m = DeleteBucketRequest{} }
func (m *DeleteBucketRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBucketRequest) ProtoMessage()    {}
func (*DeleteBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{18}
}

func (m *DeleteBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBucketRequest.Unmarshal(m, b)
}
func (m *DeleteBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBucketRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBucketRequest.Merge(m, src)
}
func (m *DeleteBucketRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBucketRequest.Size(m)
}
func (m *DeleteBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBucketRequest proto.InternalMessageInfo

func (m *DeleteBucketRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AccessControlRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Access               Access   `protobuf:"varint,2,opt,name=access,proto3,enum=m3.Access" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessControlRequest) Reset()         { *m = AccessControlRequest{} }
func (m *AccessControlRequest) String() string { return proto.CompactTextString(m) }
func (*AccessControlRequest) ProtoMessage()    {}
func (*AccessControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{19}
}

func (m *AccessControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessControlRequest.Unmarshal(m, b)
}
func (m *AccessControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessControlRequest.Marshal(b, m, deterministic)
}
func (m *AccessControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessControlRequest.Merge(m, src)
}
func (m *AccessControlRequest) XXX_Size() int {
	return xxx_messageInfo_AccessControlRequest.Size(m)
}
func (m *AccessControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccessControlRequest proto.InternalMessageInfo

func (m *AccessControlRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccessControlRequest) GetAccess() Access {
	if m != nil {
		return m.Access
	}
	return Access_PRIVATE
}

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Enabled              bool     `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{20}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

// Request a list of users on the tenant account
type ListUsersRequest struct {
	SortBy string `protobuf:"bytes,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// a query to filter users with
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// max number of results per request
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{21}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListUsersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListUsersRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListUsersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Request a list of users on the tenant account
type ListUsersResponse struct {
	// if any error, like user not allowed to list users
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// list of resulting users
	Users []*User `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	// number of users on the tenant account
	TotalUsers           int32    `protobuf:"varint,3,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{22}
}

func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (m *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(m, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetTotalUsers() int32 {
	if m != nil {
		return m.TotalUsers
	}
	return 0
}

type AddUserRequest struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// optional
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{23}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserActionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserActionRequest) Reset()         { *m = UserActionRequest{} }
func (m *UserActionRequest) String() string { return proto.CompactTextString(m) }
func (*UserActionRequest) ProtoMessage()    {}
func (*UserActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{24}
}

func (m *UserActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserActionRequest.Unmarshal(m, b)
}
func (m *UserActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserActionRequest.Marshal(b, m, deterministic)
}
func (m *UserActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserActionRequest.Merge(m, src)
}
func (m *UserActionRequest) XXX_Size() int {
	return xxx_messageInfo_UserActionRequest.Size(m)
}
func (m *UserActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserActionRequest proto.InternalMessageInfo

func (m *UserActionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UserActionResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserActionResponse) Reset()         { *m = UserActionResponse{} }
func (m *UserActionResponse) String() string { return proto.CompactTextString(m) }
func (*UserActionResponse) ProtoMessage()    {}
func (*UserActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{25}
}

func (m *UserActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserActionResponse.Unmarshal(m, b)
}
func (m *UserActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserActionResponse.Marshal(b, m, deterministic)
}
func (m *UserActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserActionResponse.Merge(m, src)
}
func (m *UserActionResponse) XXX_Size() int {
	return xxx_messageInfo_UserActionResponse.Size(m)
}
func (m *UserActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserActionResponse proto.InternalMessageInfo

func (m *UserActionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// Request a list of ServiceAccounts on the tenant account
type ListServiceAccountsRequest struct {
	SortBy string `protobuf:"bytes,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// a query to filter ServiceAccounts with
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceAccountsRequest) Reset()         { *m = ListServiceAccountsRequest{} }
func (m *ListServiceAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountsRequest) ProtoMessage()    {}
func (*ListServiceAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{26}
}

func (m *ListServiceAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountsRequest.Unmarshal(m, b)
}
func (m *ListServiceAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountsRequest.Merge(m, src)
}
func (m *ListServiceAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountsRequest.Size(m)
}
func (m *ListServiceAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountsRequest proto.InternalMessageInfo

func (m *ListServiceAccountsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListServiceAccountsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListServiceAccountsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ListServiceAccountsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Request a list of ServiceAccounts on the tenant account
type ListServiceAccountsResponse struct {
	// list of resulting ServiceAccounts
	ServiceAccounts []*ServiceAccount `protobuf:"bytes,1,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	// number of ServiceAccounts on the tenant account
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceAccountsResponse) Reset()         { *m = ListServiceAccountsResponse{} }
func (m *ListServiceAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountsResponse) ProtoMessage()    {}
func (*ListServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{27}
}

func (m *ListServiceAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountsResponse.Unmarshal(m, b)
}
func (m *ListServiceAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountsResponse.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountsResponse.Merge(m, src)
}
func (m *ListServiceAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountsResponse.Size(m)
}
func (m *ListServiceAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountsResponse proto.InternalMessageInfo

func (m *ListServiceAccountsResponse) GetServiceAccounts() []*ServiceAccount {
	if m != nil {
		return m.ServiceAccounts
	}
	return nil
}

func (m *ListServiceAccountsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ServiceAccount struct {
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Identifier for the ServiceAccount
	AccessKey string `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	// State of the ServiceAccount
	Enabled              bool     `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAccount) Reset()         { *m = ServiceAccount{} }
func (m *ServiceAccount) String() string { return proto.CompactTextString(m) }
func (*ServiceAccount) ProtoMessage()    {}
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{28}
}

func (m *ServiceAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccount.Unmarshal(m, b)
}
func (m *ServiceAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccount.Marshal(b, m, deterministic)
}
func (m *ServiceAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccount.Merge(m, src)
}
func (m *ServiceAccount) XXX_Size() int {
	return xxx_messageInfo_ServiceAccount.Size(m)
}
func (m *ServiceAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccount proto.InternalMessageInfo

func (m *ServiceAccount) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccount) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ServiceAccount) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type ServiceAccountActionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAccountActionRequest) Reset()         { *m = ServiceAccountActionRequest{} }
func (m *ServiceAccountActionRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceAccountActionRequest) ProtoMessage()    {}
func (*ServiceAccountActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{29}
}

func (m *ServiceAccountActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccountActionRequest.Unmarshal(m, b)
}
func (m *ServiceAccountActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccountActionRequest.Marshal(b, m, deterministic)
}
func (m *ServiceAccountActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccountActionRequest.Merge(m, src)
}
func (m *ServiceAccountActionRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceAccountActionRequest.Size(m)
}
func (m *ServiceAccountActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccountActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccountActionRequest proto.InternalMessageInfo

func (m *ServiceAccountActionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InfoServiceAccountResponse struct {
	ServiceAccount       *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Permissions          []*Permission   `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InfoServiceAccountResponse) Reset()         { *m = InfoServiceAccountResponse{} }
func (m *InfoServiceAccountResponse) String() string { return proto.CompactTextString(m) }
func (*InfoServiceAccountResponse) ProtoMessage()    {}
func (*InfoServiceAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{30}
}

func (m *InfoServiceAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoServiceAccountResponse.Unmarshal(m, b)
}
func (m *InfoServiceAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoServiceAccountResponse.Marshal(b, m, deterministic)
}
func (m *InfoServiceAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoServiceAccountResponse.Merge(m, src)
}
func (m *InfoServiceAccountResponse) XXX_Size() int {
	return xxx_messageInfo_InfoServiceAccountResponse.Size(m)
}
func (m *InfoServiceAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoServiceAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoServiceAccountResponse proto.InternalMessageInfo

func (m *InfoServiceAccountResponse) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *InfoServiceAccountResponse) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type CreateServiceAccountRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PermissionIds        []string `protobuf:"bytes,2,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServiceAccountRequest) Reset()         { *m = CreateServiceAccountRequest{} }
func (m *CreateServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceAccountRequest) ProtoMessage()    {}
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{31}
}

func (m *CreateServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceAccountRequest.Unmarshal(m, b)
}
func (m *CreateServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceAccountRequest.Merge(m, src)
}
func (m *CreateServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceAccountRequest.Size(m)
}
func (m *CreateServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceAccountRequest proto.InternalMessageInfo

func (m *CreateServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateServiceAccountRequest) GetPermissionIds() []string {
	if m != nil {
		return m.PermissionIds
	}
	return nil
}

type CreateServiceAccountResponse struct {
	ServiceAccount *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// secret_key will be shown only when creating a service account
	SecretKey            string   `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServiceAccountResponse) Reset()         { *m = CreateServiceAccountResponse{} }
func (m *CreateServiceAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServiceAccountResponse) ProtoMessage()    {}
func (*CreateServiceAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{32}
}

func (m *CreateServiceAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceAccountResponse.Unmarshal(m, b)
}
func (m *CreateServiceAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceAccountResponse.Marshal(b, m, deterministic)
}
func (m *CreateServiceAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceAccountResponse.Merge(m, src)
}
func (m *CreateServiceAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServiceAccountResponse.Size(m)
}
func (m *CreateServiceAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceAccountResponse proto.InternalMessageInfo

func (m *CreateServiceAccountResponse) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *CreateServiceAccountResponse) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

type UpdateServiceAccountRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enabled              bool     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PermissionIds        []string `protobuf:"bytes,4,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateServiceAccountRequest) Reset()         { *m = UpdateServiceAccountRequest{} }
func (m *UpdateServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateServiceAccountRequest) ProtoMessage()    {}
func (*UpdateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{33}
}

func (m *UpdateServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateServiceAccountRequest.Unmarshal(m, b)
}
func (m *UpdateServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateServiceAccountRequest.Merge(m, src)
}
func (m *UpdateServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateServiceAccountRequest.Size(m)
}
func (m *UpdateServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateServiceAccountRequest proto.InternalMessageInfo

func (m *UpdateServiceAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateServiceAccountRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *UpdateServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateServiceAccountRequest) GetPermissionIds() []string {
	if m != nil {
		return m.PermissionIds
	}
	return nil
}

// Request a list of Permissions on the tenant account
type ListPermissionsRequest struct {
	SortBy               string   `protobuf:"bytes,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPermissionsRequest) Reset()         { *m = ListPermissionsRequest{} }
func (m *ListPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPermissionsRequest) ProtoMessage()    {}
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{34}
}

func (m *ListPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPermissionsRequest.Unmarshal(m, b)
}
func (m *ListPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPermissionsRequest.Marshal(b, m, deterministic)
}
func (m *ListPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPermissionsRequest.Merge(m, src)
}
func (m *ListPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPermissionsRequest.Size(m)
}
func (m *ListPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPermissionsRequest proto.InternalMessageInfo

func (m *ListPermissionsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListPermissionsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListPermissionsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Request a list of Permissions on the tenant account
type ListPermissionsResponse struct {
	// list of resulting Permissions
	Permissions []*Permission `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// number of Permissions on the tenant account
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPermissionsResponse) Reset()         { *m = ListPermissionsResponse{} }
func (m *ListPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPermissionsResponse) ProtoMessage()    {}
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{35}
}

func (m *ListPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPermissionsResponse.Unmarshal(m, b)
}
func (m *ListPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPermissionsResponse.Marshal(b, m, deterministic)
}
func (m *ListPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPermissionsResponse.Merge(m, src)
}
func (m *ListPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPermissionsResponse.Size(m)
}
func (m *ListPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPermissionsResponse proto.InternalMessageInfo

func (m *ListPermissionsResponse) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *ListPermissionsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type AddPermissionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Effect               string   `protobuf:"bytes,3,opt,name=effect,proto3" json:"effect,omitempty"`
	Resources            []string `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions              []string `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPermissionRequest) Reset()         { *m = AddPermissionRequest{} }
func (m *AddPermissionRequest) String() string { return proto.CompactTextString(m) }
func (*AddPermissionRequest) ProtoMessage()    {}
func (*AddPermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{36}
}

func (m *AddPermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPermissionRequest.Unmarshal(m, b)
}
func (m *AddPermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPermissionRequest.Marshal(b, m, deterministic)
}
func (m *AddPermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPermissionRequest.Merge(m, src)
}
func (m *AddPermissionRequest) XXX_Size() int {
	return xxx_messageInfo_AddPermissionRequest.Size(m)
}
func (m *AddPermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPermissionRequest proto.InternalMessageInfo

func (m *AddPermissionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPermissionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddPermissionRequest) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *AddPermissionRequest) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *AddPermissionRequest) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

type UpdatePermissionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Effect               string   `protobuf:"bytes,4,opt,name=effect,proto3" json:"effect,omitempty"`
	Resources            []string `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions              []string `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePermissionRequest) Reset()         { *m = UpdatePermissionRequest{} }
func (m *UpdatePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePermissionRequest) ProtoMessage()    {}
func (*UpdatePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{37}
}

func (m *UpdatePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePermissionRequest.Unmarshal(m, b)
}
func (m *UpdatePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePermissionRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePermissionRequest.Merge(m, src)
}
func (m *UpdatePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePermissionRequest.Size(m)
}
func (m *UpdatePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePermissionRequest proto.InternalMessageInfo

func (m *UpdatePermissionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePermissionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePermissionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdatePermissionRequest) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *UpdatePermissionRequest) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *UpdatePermissionRequest) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

// Permission resource
type Permission struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug                 string                `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description          string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Effect               string                `protobuf:"bytes,5,opt,name=effect,proto3" json:"effect,omitempty"`
	Resources            []*PermissionResource `protobuf:"bytes,6,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions              []*PermissionAction   `protobuf:"bytes,7,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{38}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Permission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Permission) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Permission) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Permission) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *Permission) GetResources() []*PermissionResource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Permission) GetActions() []*PermissionAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

type PermissionResource struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BucketName           string   `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Pattern              string   `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionResource) Reset()         { *m = PermissionResource{} }
func (m *PermissionResource) String() string { return proto.CompactTextString(m) }
func (*PermissionResource) ProtoMessage()    {}
func (*PermissionResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{39}
}

func (m *PermissionResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionResource.Unmarshal(m, b)
}
func (m *PermissionResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionResource.Marshal(b, m, deterministic)
}
func (m *PermissionResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionResource.Merge(m, src)
}
func (m *PermissionResource) XXX_Size() int {
	return xxx_messageInfo_PermissionResource.Size(m)
}
func (m *PermissionResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionResource.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionResource proto.InternalMessageInfo

func (m *PermissionResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PermissionResource) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *PermissionResource) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

type PermissionAction struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionAction) Reset()         { *m = PermissionAction{} }
func (m *PermissionAction) String() string { return proto.CompactTextString(m) }
func (*PermissionAction) ProtoMessage()    {}
func (*PermissionAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{40}
}

func (m *PermissionAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionAction.Unmarshal(m, b)
}
func (m *PermissionAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionAction.Marshal(b, m, deterministic)
}
func (m *PermissionAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionAction.Merge(m, src)
}
func (m *PermissionAction) XXX_Size() int {
	return xxx_messageInfo_PermissionAction.Size(m)
}
func (m *PermissionAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionAction.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionAction proto.InternalMessageInfo

func (m *PermissionAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PermissionAction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PermissionActionRequest struct {
	// Identifier for the Permission
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionActionRequest) Reset()         { *m = PermissionActionRequest{} }
func (m *PermissionActionRequest) String() string { return proto.CompactTextString(m) }
func (*PermissionActionRequest) ProtoMessage()    {}
func (*PermissionActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{41}
}

func (m *PermissionActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionActionRequest.Unmarshal(m, b)
}
func (m *PermissionActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionActionRequest.Marshal(b, m, deterministic)
}
func (m *PermissionActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionActionRequest.Merge(m, src)
}
func (m *PermissionActionRequest) XXX_Size() int {
	return xxx_messageInfo_PermissionActionRequest.Size(m)
}
func (m *PermissionActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionActionRequest proto.InternalMessageInfo

func (m *PermissionActionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddPermissionsSARequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// list of permission id, an absence of a permission_id means it's not desired and should be removed
	// from the assigned list
	PermissionId         []string `protobuf:"bytes,2,rep,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPermissionsSARequest) Reset()         { *m = AddPermissionsSARequest{} }
func (m *AddPermissionsSARequest) String() string { return proto.CompactTextString(m) }
func (*AddPermissionsSARequest) ProtoMessage()    {}
func (*AddPermissionsSARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{42}
}

func (m *AddPermissionsSARequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPermissionsSARequest.Unmarshal(m, b)
}
func (m *AddPermissionsSARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPermissionsSARequest.Marshal(b, m, deterministic)
}
func (m *AddPermissionsSARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPermissionsSARequest.Merge(m, src)
}
func (m *AddPermissionsSARequest) XXX_Size() int {
	return xxx_messageInfo_AddPermissionsSARequest.Size(m)
}
func (m *AddPermissionsSARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPermissionsSARequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPermissionsSARequest proto.InternalMessageInfo

func (m *AddPermissionsSARequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddPermissionsSARequest) GetPermissionId() []string {
	if m != nil {
		return m.PermissionId
	}
	return nil
}

type MultiAddPermissionToSAsRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceAccountId     []string `protobuf:"bytes,2,rep,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiAddPermissionToSAsRequest) Reset()         { *m = MultiAddPermissionToSAsRequest{} }
func (m *MultiAddPermissionToSAsRequest) String() string { return proto.CompactTextString(m) }
func (*MultiAddPermissionToSAsRequest) ProtoMessage()    {}
func (*MultiAddPermissionToSAsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{43}
}

func (m *MultiAddPermissionToSAsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiAddPermissionToSAsRequest.Unmarshal(m, b)
}
func (m *MultiAddPermissionToSAsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiAddPermissionToSAsRequest.Marshal(b, m, deterministic)
}
func (m *MultiAddPermissionToSAsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiAddPermissionToSAsRequest.Merge(m, src)
}
func (m *MultiAddPermissionToSAsRequest) XXX_Size() int {
	return xxx_messageInfo_MultiAddPermissionToSAsRequest.Size(m)
}
func (m *MultiAddPermissionToSAsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiAddPermissionToSAsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiAddPermissionToSAsRequest proto.InternalMessageInfo

func (m *MultiAddPermissionToSAsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MultiAddPermissionToSAsRequest) GetServiceAccountId() []string {
	if m != nil {
		return m.ServiceAccountId
	}
	return nil
}

type MultiAddPermissionToSAsResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiAddPermissionToSAsResponse) Reset()         { *m = MultiAddPermissionToSAsResponse{} }
func (m *MultiAddPermissionToSAsResponse) String() string { return proto.CompactTextString(m) }
func (*MultiAddPermissionToSAsResponse) ProtoMessage()    {}
func (*MultiAddPermissionToSAsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{44}
}

func (m *MultiAddPermissionToSAsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiAddPermissionToSAsResponse.Unmarshal(m, b)
}
func (m *MultiAddPermissionToSAsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiAddPermissionToSAsResponse.Marshal(b, m, deterministic)
}
func (m *MultiAddPermissionToSAsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiAddPermissionToSAsResponse.Merge(m, src)
}
func (m *MultiAddPermissionToSAsResponse) XXX_Size() int {
	return xxx_messageInfo_MultiAddPermissionToSAsResponse.Size(m)
}
func (m *MultiAddPermissionToSAsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiAddPermissionToSAsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiAddPermissionToSAsResponse proto.InternalMessageInfo

func (m *MultiAddPermissionToSAsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *MultiAddPermissionToSAsResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type WhoAmIResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhoAmIResponse) Reset()         { *m = WhoAmIResponse{} }
func (m *WhoAmIResponse) String() string { return proto.CompactTextString(m) }
func (*WhoAmIResponse) ProtoMessage()    {}
func (*WhoAmIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{45}
}

func (m *WhoAmIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhoAmIResponse.Unmarshal(m, b)
}
func (m *WhoAmIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhoAmIResponse.Marshal(b, m, deterministic)
}
func (m *WhoAmIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhoAmIResponse.Merge(m, src)
}
func (m *WhoAmIResponse) XXX_Size() int {
	return xxx_messageInfo_WhoAmIResponse.Size(m)
}
func (m *WhoAmIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WhoAmIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WhoAmIResponse proto.InternalMessageInfo

func (m *WhoAmIResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *WhoAmIResponse) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

type ForgotPasswordRequest struct {
	Company              string   `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordRequest) Reset()         { *m = ForgotPasswordRequest{} }
func (m *ForgotPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordRequest) ProtoMessage()    {}
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{46}
}

func (m *ForgotPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordRequest.Unmarshal(m, b)
}
func (m *ForgotPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ForgotPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordRequest.Merge(m, src)
}
func (m *ForgotPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordRequest.Size(m)
}
func (m *ForgotPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordRequest proto.InternalMessageInfo

func (m *ForgotPasswordRequest) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *ForgotPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type VersionResponse struct {
	Components           map[string]string `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e027d33627c05e07, []int{47}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetComponents() map[string]string {
	if m != nil {
		return m.Components
	}
	return nil
}

func init() {
	proto.RegisterEnum("m3.Access", Access_name, Access_value)
	proto.RegisterType((*Empty)(nil), "m3.Empty")
	proto.RegisterType((*RegisterAccountRequest)(nil), "m3.RegisterAccountRequest")
	proto.RegisterType((*RegisterAccountResponse)(nil), "m3.RegisterAccountResponse")
	proto.RegisterType((*LoginRequest)(nil), "m3.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "m3.LoginResponse")
	proto.RegisterType((*SetPasswordRequest)(nil), "m3.SetPasswordRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "m3.ChangePasswordRequest")
	proto.RegisterType((*InviteRequest)(nil), "m3.InviteRequest")
	proto.RegisterType((*ValidateInviteRequest)(nil), "m3.ValidateInviteRequest")
	proto.RegisterType((*ValidateEmailInviteResponse)(nil), "m3.ValidateEmailInviteResponse")
	proto.RegisterType((*MetricsRequest)(nil), "m3.MetricsRequest")
	proto.RegisterType((*MetricsDayUsage)(nil), "m3.MetricsDayUsage")
	proto.RegisterType((*MetricsResponse)(nil), "m3.MetricsResponse")
	proto.RegisterType((*NetworkMetrics)(nil), "m3.NetworkMetrics")
	proto.RegisterType((*ListBucketsRequest)(nil), "m3.ListBucketsRequest")
	proto.RegisterType((*ListBucketsResponse)(nil), "m3.ListBucketsResponse")
	proto.RegisterType((*Bucket)(nil), "m3.Bucket")
	proto.RegisterType((*MakeBucketRequest)(nil), "m3.MakeBucketRequest")
	proto.RegisterType((*DeleteBucketRequest)(nil), "m3.DeleteBucketRequest")
	proto.RegisterType((*AccessControlRequest)(nil), "m3.AccessControlRequest")
	proto.RegisterType((*User)(nil), "m3.User")
	proto.RegisterType((*ListUsersRequest)(nil), "m3.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "m3.ListUsersResponse")
	proto.RegisterType((*AddUserRequest)(nil), "m3.AddUserRequest")
	proto.RegisterType((*UserActionRequest)(nil), "m3.UserActionRequest")
	proto.RegisterType((*UserActionResponse)(nil), "m3.UserActionResponse")
	proto.RegisterType((*ListServiceAccountsRequest)(nil), "m3.ListServiceAccountsRequest")
	proto.RegisterType((*ListServiceAccountsResponse)(nil), "m3.ListServiceAccountsResponse")
	proto.RegisterType((*ServiceAccount)(nil), "m3.ServiceAccount")
	proto.RegisterType((*ServiceAccountActionRequest)(nil), "m3.ServiceAccountActionRequest")
	proto.RegisterType((*InfoServiceAccountResponse)(nil), "m3.InfoServiceAccountResponse")
	proto.RegisterType((*CreateServiceAccountRequest)(nil), "m3.CreateServiceAccountRequest")
	proto.RegisterType((*CreateServiceAccountResponse)(nil), "m3.CreateServiceAccountResponse")
	proto.RegisterType((*UpdateServiceAccountRequest)(nil), "m3.UpdateServiceAccountRequest")
	proto.RegisterType((*ListPermissionsRequest)(nil), "m3.ListPermissionsRequest")
	proto.RegisterType((*ListPermissionsResponse)(nil), "m3.ListPermissionsResponse")
	proto.RegisterType((*AddPermissionRequest)(nil), "m3.AddPermissionRequest")
	proto.RegisterType((*UpdatePermissionRequest)(nil), "m3.UpdatePermissionRequest")
	proto.RegisterType((*Permission)(nil), "m3.Permission")
	proto.RegisterType((*PermissionResource)(nil), "m3.PermissionResource")
	proto.RegisterType((*PermissionAction)(nil), "m3.PermissionAction")
	proto.RegisterType((*PermissionActionRequest)(nil), "m3.PermissionActionRequest")
	proto.RegisterType((*AddPermissionsSARequest)(nil), "m3.AddPermissionsSARequest")
	proto.RegisterType((*MultiAddPermissionToSAsRequest)(nil), "m3.MultiAddPermissionToSAsRequest")
	proto.RegisterType((*MultiAddPermissionToSAsResponse)(nil), "m3.MultiAddPermissionToSAsResponse")
	proto.RegisterType((*WhoAmIResponse)(nil), "m3.WhoAmIResponse")
	proto.RegisterType((*ForgotPasswordRequest)(nil), "m3.ForgotPasswordRequest")
	proto.RegisterType((*VersionResponse)(nil), "m3.VersionResponse")
	proto.RegisterMapType((map[string]string)(nil), "m3.VersionResponse.ComponentsEntry")
}

func init() { proto.RegisterFile("public_api.proto", fileDescriptor_e027d33627c05e07) }

var fileDescriptor_e027d33627c05e07 = []byte{
	// 2050 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0x5f, 0x77, 0x1b, 0x39,
	0x15, 0xf7, 0xff, 0xc4, 0xd7, 0x8d, 0xe3, 0x2a, 0xce, 0x9f, 0xb5, 0xfb, 0x27, 0xab, 0xb0, 0x9c,
	0x16, 0x9a, 0x00, 0x6d, 0x81, 0xee, 0x96, 0x02, 0x4e, 0x1a, 0x20, 0xa7, 0x49, 0x36, 0x67, 0x92,
	0x74, 0x97, 0xe5, 0x80, 0xcf, 0xc4, 0x56, 0xd2, 0x69, 0xc6, 0x23, 0x77, 0x24, 0x27, 0xc7, 0xfb,
	0xc8, 0x2b, 0xcf, 0xbc, 0xf1, 0x1d, 0xf8, 0x1a, 0xf0, 0x3d, 0xf8, 0x20, 0x1c, 0x49, 0xa3, 0xb1,
	0x34, 0x1e, 0x4f, 0xd3, 0xee, 0x9e, 0x7d, 0x1b, 0x5d, 0xe9, 0xfe, 0x74, 0xff, 0xe9, 0xea, 0x5e,
	0x0d, 0x34, 0x86, 0xa3, 0x33, 0xdf, 0xeb, 0x75, 0xdd, 0xa1, 0xb7, 0x35, 0x0c, 0x29, 0xa7, 0xa8,
	0x30, 0x78, 0x82, 0xe7, 0xa0, 0xbc, 0x3b, 0x18, 0xf2, 0x31, 0xfe, 0x77, 0x1e, 0x56, 0x1c, 0x72,
	0xe1, 0x31, 0x4e, 0xc2, 0x4e, 0xaf, 0x47, 0x47, 0x01, 0x77, 0xc8, 0xbb, 0x11, 0x61, 0x1c, 0xb5,
	0xa1, 0x7a, 0x3e, 0xf2, 0xfd, 0x6e, 0xe0, 0x0e, 0xc8, 0x5a, 0x7e, 0x3d, 0xff, 0xa0, 0xea, 0xcc,
	0x0b, 0xc2, 0xa1, 0x3b, 0x20, 0x68, 0x0d, 0xe6, 0x7a, 0x74, 0x30, 0x74, 0x83, 0xf1, 0x5a, 0x41,
	0x4e, 0xe9, 0x21, 0x7a, 0x04, 0x28, 0xfa, 0xec, 0xb2, 0x37, 0x34, 0xe4, 0x8a, 0xbf, 0x28, 0x17,
	0x35, 0xa2, 0x99, 0x63, 0x31, 0x21, 0x71, 0x9a, 0x50, 0x26, 0x03, 0xd7, 0xf3, 0xd7, 0x4a, 0x72,
	0x81, 0x1a, 0xa0, 0x16, 0xcc, 0x0f, 0x5d, 0xc6, 0xae, 0x69, 0xd8, 0x5f, 0x2b, 0xab, 0x9d, 0xf5,
	0x18, 0xef, 0xc3, 0xea, 0x94, 0xc0, 0x6c, 0x48, 0x03, 0xa6, 0xc0, 0xc2, 0x90, 0x86, 0x91, 0xb4,
	0x6a, 0x20, 0xf4, 0x78, 0x7b, 0xcd, 0xbb, 0x9c, 0x5e, 0x92, 0x20, 0x12, 0x76, 0xfe, 0xed, 0x35,
	0x3f, 0x11, 0x63, 0xfc, 0x0d, 0xdc, 0xda, 0xa7, 0x17, 0x5e, 0xa0, 0x95, 0x36, 0xf4, 0xca, 0xdb,
	0x7a, 0xc5, 0x92, 0x16, 0x66, 0x49, 0x5a, 0x4c, 0x48, 0xba, 0x0d, 0x0b, 0x11, 0xf6, 0xc7, 0xcb,
	0x77, 0x00, 0xe8, 0x98, 0xf0, 0xa3, 0x08, 0xd2, 0x70, 0xcd, 0x28, 0xf4, 0x23, 0x96, 0xc8, 0x35,
	0xa3, 0xd0, 0x97, 0x2c, 0x96, 0x48, 0x85, 0x84, 0x48, 0x7f, 0x85, 0xe5, 0x9d, 0x37, 0x6e, 0x70,
	0x41, 0x92, 0x88, 0x9f, 0xc2, 0x2d, 0xea, 0xf7, 0xbb, 0x31, 0xa3, 0x02, 0xad, 0x51, 0xbf, 0xaf,
	0x57, 0x8a, 0x25, 0x01, 0xb9, 0xee, 0x26, 0xb0, 0x6b, 0x01, 0xb9, 0xd6, 0x4b, 0xf0, 0xe7, 0xb0,
	0xb0, 0x17, 0x5c, 0x79, 0x9c, 0x68, 0x58, 0x04, 0x25, 0x23, 0x7c, 0xe4, 0x77, 0xba, 0x21, 0xf1,
	0x53, 0x58, 0x7e, 0xed, 0xfa, 0x5e, 0xdf, 0xe5, 0xc4, 0x86, 0xc8, 0xd2, 0x15, 0x1f, 0x40, 0x5b,
	0x73, 0xed, 0x0a, 0x18, 0xcd, 0x6a, 0x18, 0x5c, 0x6e, 0x95, 0x37, 0x7d, 0x36, 0x33, 0x76, 0xf1,
	0x8f, 0xa1, 0x7e, 0x40, 0x78, 0xe8, 0xf5, 0x98, 0xde, 0xbd, 0x09, 0xe5, 0x77, 0x23, 0x12, 0xea,
	0x68, 0x50, 0x03, 0xfc, 0x1c, 0x16, 0xa3, 0x75, 0x2f, 0xdd, 0xf1, 0x29, 0x73, 0x2f, 0x88, 0xd0,
	0x94, 0x7b, 0x13, 0x4d, 0xc5, 0xb7, 0x60, 0x1e, 0x89, 0x49, 0xb9, 0x4d, 0xc9, 0x51, 0x03, 0xfc,
	0xdf, 0x7c, 0xcc, 0x1d, 0x0b, 0xba, 0x01, 0x0b, 0x9c, 0x72, 0xd7, 0xef, 0x9e, 0x8d, 0x7a, 0x97,
	0x84, 0x33, 0x09, 0x53, 0x72, 0x6e, 0x49, 0xe2, 0xb6, 0xa2, 0xa1, 0xfb, 0x50, 0x53, 0x8b, 0x4c,
	0x50, 0x90, 0x24, 0x25, 0xc3, 0x5d, 0x50, 0xa3, 0x6e, 0x8f, 0x32, 0x2e, 0xc3, 0xb1, 0xec, 0x54,
	0x25, 0x65, 0x87, 0x32, 0x8e, 0x9e, 0x42, 0xad, 0xef, 0x7a, 0xfe, 0x38, 0xe2, 0x2f, 0xad, 0x17,
	0x1f, 0xd4, 0x1e, 0x2f, 0x6d, 0x0d, 0x9e, 0x6c, 0x25, 0x94, 0x71, 0x40, 0xae, 0x53, 0xa0, 0x6d,
	0xa8, 0xb2, 0x37, 0xf4, 0x5a, 0x61, 0x8a, 0xc3, 0x38, 0xef, 0xcc, 0x0b, 0x82, 0x80, 0xc4, 0xbf,
	0x86, 0xfa, 0x21, 0xe1, 0xd7, 0x34, 0xbc, 0x8c, 0x20, 0xd0, 0x67, 0x50, 0xef, 0x8d, 0xc2, 0x90,
	0x04, 0xbc, 0x4b, 0x2e, 0x42, 0xc2, 0x94, 0x2a, 0x45, 0x67, 0x21, 0xa2, 0xee, 0x4a, 0x22, 0x7e,
	0x07, 0x68, 0xdf, 0x63, 0x3c, 0x52, 0x4d, 0x5b, 0x7b, 0x15, 0xe6, 0x98, 0x48, 0x19, 0x67, 0xda,
	0xde, 0x15, 0x31, 0xdc, 0x1e, 0xa3, 0x15, 0xa8, 0xd0, 0xf3, 0x73, 0x46, 0xb8, 0xd4, 0xba, 0xec,
	0x44, 0xa3, 0x89, 0x7b, 0x8a, 0x86, 0x7b, 0x04, 0xd5, 0xf7, 0x06, 0x1e, 0x97, 0x49, 0xa5, 0xec,
	0xa8, 0x01, 0xbe, 0x82, 0x25, 0x6b, 0xcb, 0xcc, 0x43, 0xf9, 0x23, 0x98, 0xd3, 0xae, 0x28, 0x48,
	0x3b, 0x81, 0xb0, 0x93, 0xe2, 0x75, 0xf4, 0xd4, 0xb4, 0xdb, 0x94, 0xcd, 0x2d, 0xb7, 0xe1, 0x13,
	0xa8, 0xa8, 0xcf, 0xd4, 0xd3, 0x80, 0xa0, 0xc4, 0xbc, 0x6f, 0x95, 0x37, 0x8b, 0x8e, 0xfc, 0x46,
	0x18, 0x2a, 0x6e, 0xaf, 0x27, 0x6c, 0x27, 0xf0, 0xea, 0x6a, 0xef, 0x8e, 0xa4, 0x38, 0xd1, 0x0c,
	0x7e, 0x05, 0xb7, 0x0f, 0xdc, 0x4b, 0x12, 0x49, 0x94, 0x71, 0xdc, 0x26, 0x60, 0x85, 0x99, 0x60,
	0x0f, 0x61, 0xe9, 0x25, 0xf1, 0x09, 0x7f, 0x3f, 0x1c, 0x3e, 0x84, 0xa6, 0x62, 0xde, 0xa1, 0x01,
	0x0f, 0xa9, 0xff, 0x5d, 0xb7, 0xfe, 0x06, 0x4a, 0xa7, 0x8c, 0x84, 0x37, 0xcf, 0x14, 0xa8, 0x0e,
	0x05, 0x4f, 0x27, 0xdb, 0x82, 0xd7, 0x17, 0xc7, 0x99, 0x04, 0xee, 0x99, 0x4f, 0xfa, 0xd2, 0xdf,
	0xf3, 0x8e, 0x1e, 0x62, 0x0a, 0x0d, 0xe1, 0x71, 0x81, 0xff, 0xc3, 0x84, 0xd8, 0x5b, 0xb8, 0x6d,
	0x6c, 0x98, 0x19, 0x60, 0xf7, 0x44, 0x6e, 0x20, 0xa1, 0x0e, 0xaf, 0x79, 0x61, 0x1a, 0xc1, 0xe7,
	0x28, 0xb2, 0x79, 0xd8, 0xc5, 0x2a, 0x15, 0x58, 0xfa, 0xb0, 0x93, 0x90, 0xe1, 0xd7, 0x50, 0xef,
	0xf4, 0xfb, 0x92, 0xe5, 0x43, 0x93, 0x6d, 0xe6, 0xad, 0xb5, 0x01, 0xb7, 0x05, 0x68, 0xa7, 0xc7,
	0x3d, 0x1a, 0x5f, 0x8b, 0xca, 0xe6, 0x79, 0x6d, 0x73, 0xfc, 0x08, 0x90, 0xb9, 0x28, 0xd2, 0x74,
	0x05, 0x2a, 0x8c, 0xbb, 0x7c, 0xc4, 0x62, 0xd3, 0xca, 0x11, 0x1e, 0x43, 0x4b, 0x98, 0xe5, 0x98,
	0x84, 0x57, 0x5e, 0x8f, 0x44, 0xb7, 0xf6, 0x0f, 0xe3, 0x91, 0x10, 0xda, 0xa9, 0x5b, 0x47, 0x12,
	0xbf, 0x80, 0x06, 0x53, 0x53, 0x5d, 0x37, 0x9a, 0x5b, 0xcb, 0x4b, 0x87, 0x20, 0xe1, 0x10, 0x9b,
	0xcd, 0x59, 0x64, 0x36, 0x8c, 0xd8, 0x53, 0x7a, 0x24, 0x12, 0x50, 0x0d, 0xf0, 0x00, 0xea, 0x36,
	0x63, 0xd2, 0x7c, 0xb1, 0xa7, 0x0a, 0x86, 0xa7, 0xee, 0x02, 0xa8, 0x23, 0xd1, 0xbd, 0x24, 0x5a,
	0xb5, 0xaa, 0xa2, 0xbc, 0x22, 0xe3, 0x8c, 0x28, 0xdf, 0x84, 0xb6, 0xbd, 0x5d, 0xb6, 0xeb, 0xfe,
	0x91, 0x87, 0xd6, 0x5e, 0x70, 0x4e, 0x13, 0xba, 0x69, 0x8b, 0x3c, 0x87, 0xc5, 0x84, 0x45, 0x24,
	0x6f, 0xba, 0x41, 0xea, 0xb6, 0x41, 0xd0, 0xcf, 0xa1, 0x36, 0x24, 0xe1, 0xc0, 0x63, 0xcc, 0xa3,
	0x81, 0x0e, 0xed, 0xba, 0x60, 0x3c, 0x8a, 0xc9, 0x8e, 0xb9, 0x04, 0x7f, 0x0d, 0xed, 0x9d, 0x90,
	0xb8, 0x9c, 0x24, 0xc5, 0x99, 0x1d, 0xd2, 0x9f, 0x41, 0x7d, 0x82, 0xd0, 0xf5, 0xfa, 0x6a, 0x9f,
	0xaa, 0xb3, 0x30, 0xa1, 0xee, 0xf5, 0x19, 0xfe, 0x16, 0xee, 0xa4, 0x23, 0x7f, 0x1f, 0x8a, 0xde,
	0x05, 0x60, 0xa4, 0x17, 0x12, 0x2e, 0x9d, 0xa5, 0xdc, 0x58, 0x55, 0x94, 0x57, 0x64, 0x8c, 0xff,
	0x9e, 0x87, 0xf6, 0xe9, 0xb0, 0x3f, 0x53, 0xad, 0x64, 0x3c, 0x18, 0xce, 0x2d, 0x58, 0xce, 0x8d,
	0x0d, 0x50, 0xcc, 0x34, 0x40, 0x29, 0xcd, 0x00, 0x5d, 0x58, 0x11, 0xa1, 0x3f, 0xb1, 0xfc, 0x87,
	0x9e, 0xb8, 0xa2, 0x79, 0xe2, 0x52, 0xce, 0x96, 0x0b, 0xab, 0x53, 0x1b, 0x44, 0xc6, 0x4d, 0x04,
	0x42, 0xfe, 0xbd, 0x81, 0x30, 0xe3, 0x28, 0xfd, 0x2b, 0x0f, 0xcd, 0x4e, 0xbf, 0x6f, 0x30, 0x65,
	0x04, 0xc6, 0x3a, 0xd4, 0xfa, 0x84, 0xf5, 0x42, 0x6f, 0x28, 0xe2, 0x5f, 0xd7, 0xa7, 0x06, 0x49,
	0xe8, 0x47, 0xce, 0xcf, 0x49, 0x8f, 0x47, 0xf6, 0x8c, 0x46, 0xe8, 0x0e, 0x54, 0x43, 0xc2, 0xe8,
	0x28, 0xec, 0x11, 0x6d, 0xcc, 0x09, 0x41, 0x78, 0xc7, 0x95, 0x47, 0x8a, 0xad, 0x95, 0xe5, 0x9c,
	0x1e, 0x8a, 0xee, 0x69, 0x55, 0xf9, 0x79, 0x5a, 0xc2, 0x9b, 0x9c, 0xf9, 0x84, 0xc4, 0xc5, 0x2c,
	0x89, 0x4b, 0xb3, 0x25, 0x2e, 0x67, 0x48, 0x5c, 0xb1, 0x25, 0xfe, 0x5f, 0x1e, 0x60, 0x22, 0xeb,
	0x8d, 0x84, 0x14, 0x15, 0x8a, 0x3f, 0xba, 0xd0, 0x21, 0x28, 0xbe, 0x93, 0x82, 0x97, 0xb2, 0x04,
	0x2f, 0x5b, 0x82, 0x3f, 0x35, 0x05, 0xaf, 0xc8, 0xb8, 0x58, 0x49, 0xc4, 0x45, 0x34, 0x6d, 0x2a,
	0xb4, 0x35, 0x51, 0x68, 0x4e, 0xf2, 0x34, 0x6d, 0x9e, 0x28, 0xe5, 0xc5, 0x6a, 0x76, 0x01, 0x4d,
	0x03, 0x4e, 0x69, 0x7b, 0x1f, 0x6a, 0xaa, 0x70, 0xeb, 0x1a, 0x4a, 0x83, 0x22, 0xe9, 0x2e, 0x77,
	0xe8, 0x72, 0x4e, 0x42, 0xed, 0x1b, 0x3d, 0xc4, 0xbf, 0x82, 0x46, 0x72, 0xf7, 0x34, 0x63, 0xf2,
	0xf1, 0x30, 0x36, 0xa6, 0xf8, 0xc6, 0x0f, 0x61, 0x75, 0x4a, 0xea, 0x19, 0x89, 0xfa, 0x10, 0x56,
	0xad, 0xd0, 0x67, 0xc7, 0x9d, 0x59, 0xb1, 0xb5, 0x01, 0x0b, 0x56, 0x46, 0x88, 0x32, 0xe2, 0x2d,
	0x33, 0x21, 0xe0, 0xbf, 0xc1, 0xbd, 0x83, 0x91, 0xcf, 0x3d, 0x0b, 0xf4, 0x84, 0x1e, 0x77, 0xd8,
	0x2c, 0xd8, 0x47, 0x80, 0x12, 0x29, 0x72, 0x82, 0xdd, 0xb0, 0x33, 0xe2, 0x5e, 0x1f, 0x7f, 0x09,
	0xf7, 0x67, 0xe2, 0x67, 0x96, 0x42, 0x93, 0xb2, 0xa1, 0x60, 0x95, 0x0d, 0x7f, 0x82, 0xfa, 0x57,
	0x6f, 0x68, 0x67, 0xb0, 0x17, 0xf3, 0xdf, 0x81, 0x92, 0x28, 0x87, 0xa2, 0x44, 0x3d, 0xa9, 0x99,
	0x24, 0x35, 0xa3, 0xaf, 0xfb, 0x23, 0x2c, 0xff, 0x81, 0x86, 0x17, 0x74, 0xaa, 0x91, 0xfe, 0xc0,
	0x76, 0x1f, 0xff, 0x33, 0x0f, 0x8b, 0xaf, 0x49, 0xc8, 0xcc, 0xaa, 0x67, 0x07, 0x40, 0x30, 0xd1,
	0x80, 0x4c, 0xaa, 0x87, 0x0d, 0x21, 0x5a, 0x62, 0xe1, 0xd6, 0x4e, 0xbc, 0x6a, 0x37, 0xe0, 0xe1,
	0xd8, 0x31, 0xd8, 0x5a, 0x2f, 0x60, 0x31, 0x31, 0x8d, 0x1a, 0x50, 0x14, 0x97, 0x8b, 0x92, 0x4b,
	0x7c, 0x0a, 0x99, 0xae, 0x5c, 0x7f, 0xa4, 0x23, 0x4a, 0x0d, 0xbe, 0x28, 0x3c, 0xcb, 0xff, 0x64,
	0x13, 0x2a, 0xaa, 0xae, 0x46, 0x35, 0x98, 0x3b, 0x72, 0xf6, 0x5e, 0x77, 0x4e, 0x76, 0x1b, 0x39,
	0x04, 0x50, 0x39, 0x3a, 0xdd, 0xde, 0xdf, 0xdb, 0x69, 0xe4, 0xc5, 0xf7, 0xce, 0xe9, 0xf1, 0xc9,
	0x97, 0x07, 0x8d, 0xc2, 0xe3, 0xff, 0x20, 0xa8, 0x1e, 0xc9, 0x77, 0xa1, 0xce, 0xd1, 0x1e, 0x7a,
	0x05, 0x75, 0xfd, 0xa2, 0x72, 0x42, 0x02, 0x37, 0xe0, 0xa8, 0x25, 0xc4, 0x4f, 0x7f, 0x16, 0x6a,
	0xb5, 0x53, 0xe7, 0x94, 0x8a, 0x38, 0x87, 0xb6, 0xa0, 0x2c, 0x1f, 0x3d, 0x50, 0x43, 0xac, 0x33,
	0xdf, 0x56, 0x5a, 0xb7, 0x0d, 0x4a, 0xbc, 0x7e, 0x1d, 0x2a, 0xfb, 0xf4, 0x82, 0x8e, 0x38, 0xaa,
	0x8a, 0x69, 0xf9, 0x2a, 0xd5, 0x9a, 0x7c, 0xe2, 0x1c, 0x7a, 0x0c, 0x35, 0xe3, 0x09, 0x04, 0xad,
	0xa8, 0xeb, 0x39, 0xe9, 0x4a, 0x9b, 0xe7, 0x19, 0xd4, 0xed, 0x77, 0x0e, 0xf4, 0x89, 0x98, 0x4e,
	0x7d, 0xfb, 0xb0, 0x39, 0x7f, 0x06, 0x0b, 0xb2, 0xb2, 0xed, 0xf7, 0xd5, 0x5b, 0x02, 0x92, 0x52,
	0x5b, 0x4f, 0x12, 0x36, 0xc3, 0xe7, 0xb0, 0xaa, 0x8a, 0x70, 0x36, 0x91, 0xe9, 0x86, 0xac, 0x87,
	0x50, 0xb7, 0xdf, 0x3c, 0x94, 0x94, 0xa9, 0xef, 0x20, 0xad, 0xfb, 0xe6, 0x54, 0xca, 0x63, 0x07,
	0xce, 0xa1, 0xa7, 0x30, 0xa7, 0xdb, 0x70, 0x64, 0xb4, 0xf5, 0x1a, 0x61, 0xc9, 0xa2, 0xc5, 0x5c,
	0xbf, 0x87, 0x9a, 0xd1, 0x17, 0x2b, 0xfb, 0x4e, 0xf7, 0xe6, 0xad, 0xd5, 0x29, 0x7a, 0x8c, 0xf0,
	0x0b, 0x80, 0x49, 0x2f, 0x8a, 0x96, 0xe5, 0x36, 0xc9, 0xde, 0xb4, 0x65, 0x34, 0xd0, 0x38, 0x87,
	0x7e, 0x09, 0xb7, 0xcc, 0x8e, 0x13, 0x49, 0xf4, 0x94, 0x1e, 0x34, 0xc1, 0xb6, 0x0d, 0x9f, 0x28,
	0x1f, 0x2a, 0x8a, 0xd5, 0x89, 0xa2, 0xb5, 0x49, 0x7b, 0x69, 0x37, 0xa7, 0xb6, 0xd5, 0x37, 0x01,
	0x84, 0xc3, 0x54, 0x6a, 0x31, 0xa3, 0x4e, 0xda, 0xcc, 0xce, 0x38, 0x38, 0x87, 0xbe, 0x80, 0x6a,
	0xdc, 0xd3, 0xa1, 0xa6, 0x36, 0x82, 0xd9, 0x53, 0xb6, 0x96, 0x13, 0xd4, 0x98, 0xf7, 0x21, 0xcc,
	0x45, 0x3d, 0x9a, 0x72, 0x88, 0xdd, 0xb0, 0xb5, 0xe2, 0x04, 0x86, 0x73, 0xe8, 0xb7, 0x50, 0x7b,
	0xe9, 0x31, 0x51, 0xf4, 0xc9, 0xe5, 0xcb, 0x7a, 0xca, 0xba, 0x23, 0x5a, 0x2b, 0x49, 0x72, 0xbc,
	0xd5, 0x33, 0xa8, 0xdb, 0x29, 0x4e, 0xc5, 0x52, 0x6a, 0xda, 0xb3, 0xed, 0xf1, 0x02, 0x60, 0x37,
	0xf8, 0xf8, 0x8d, 0x5f, 0x00, 0x38, 0x64, 0x40, 0xaf, 0x3e, 0x92, 0x7d, 0x13, 0xe6, 0x45, 0x37,
	0x92, 0xc5, 0x6c, 0x9a, 0xe9, 0x6b, 0xf5, 0x88, 0x93, 0xe8, 0xe7, 0xd0, 0x3d, 0xed, 0x81, 0xf4,
	0x1e, 0x53, 0x1d, 0x9e, 0x8c, 0x46, 0x10, 0xe7, 0xd0, 0x5f, 0xa0, 0x99, 0xd6, 0x2f, 0x20, 0xc9,
	0x9a, 0xd1, 0xa3, 0xb4, 0xd6, 0x67, 0x2f, 0x88, 0xc1, 0x0f, 0x61, 0x39, 0xf2, 0x6e, 0x1a, 0x7a,
	0x46, 0xfb, 0xd6, 0x4a, 0xe9, 0x46, 0x70, 0x0e, 0x1d, 0x40, 0x53, 0xf9, 0xec, 0xfb, 0x81, 0x7b,
	0x09, 0x4d, 0xe5, 0xc3, 0x0f, 0x85, 0xb3, 0x02, 0xe9, 0x2b, 0x40, 0xd3, 0x8d, 0xe5, 0xfb, 0x31,
	0xee, 0xa9, 0x2c, 0x39, 0xab, 0x23, 0xc5, 0x39, 0xf4, 0x67, 0x68, 0xa6, 0x75, 0x53, 0x0a, 0x3a,
	0xa3, 0xcf, 0xba, 0x01, 0xf4, 0x01, 0x7c, 0xda, 0x61, 0xcc, 0xbb, 0x08, 0x8c, 0x3a, 0xeb, 0x24,
	0xa9, 0x42, 0x3b, 0x3a, 0xbb, 0x69, 0xb5, 0x98, 0x6d, 0x82, 0x7d, 0x58, 0x4c, 0xb4, 0x44, 0xea,
	0x2e, 0x4d, 0x6f, 0xc4, 0xd4, 0x5d, 0x3a, 0xa3, 0x87, 0xc2, 0x39, 0xf4, 0x1c, 0x16, 0xac, 0x5d,
	0xa3, 0x0c, 0x97, 0xd2, 0x0f, 0xb5, 0x12, 0xbd, 0x15, 0xce, 0xa1, 0xdf, 0x40, 0x43, 0xf9, 0xd4,
	0xe0, 0x6f, 0xa7, 0x56, 0xcd, 0x69, 0x8a, 0x74, 0xa0, 0x91, 0x6c, 0x6c, 0x14, 0xf7, 0x8c, 0x76,
	0x27, 0x45, 0x80, 0xdf, 0x41, 0x5d, 0x98, 0xfe, 0xa6, 0xdb, 0x4f, 0x03, 0x5c, 0xc1, 0xc3, 0xa4,
	0x6f, 0x4e, 0xa8, 0x2c, 0x31, 0x87, 0xc9, 0xc0, 0x67, 0x08, 0xcb, 0x5b, 0x27, 0xb3, 0xbe, 0x6d,
	0x6d, 0x64, 0xae, 0x89, 0xcd, 0xfe, 0x53, 0x98, 0x8b, 0x4a, 0x37, 0xf3, 0x76, 0x58, 0x4a, 0x29,
	0xe9, 0x70, 0x6e, 0xfb, 0x01, 0x34, 0x3d, 0xba, 0x35, 0xf0, 0x02, 0x31, 0xad, 0xfe, 0xb5, 0x6d,
	0xba, 0x43, 0x6f, 0xbb, 0x1e, 0xd5, 0x57, 0x43, 0xef, 0x28, 0xa4, 0x9c, 0x1e, 0xe5, 0xcf, 0x2a,
	0xf2, 0xf7, 0xdb, 0x93, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x50, 0x20, 0xac, 0x59, 0x92, 0x1b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublicAPIClient is the client API for PublicAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicAPIClient interface {
	// Registers a new Tenant and a Tenant Admin account
	RegisterTenant(ctx context.Context, in *RegisterAccountRequest, opts ...grpc.CallOption) (*RegisterAccountResponse, error)
	// Login
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Logout
	Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// Set Password Used for Signing Up a new User and Resetting a Password
	SetPassword(ctx context.Context, in *SetPasswordRequest, opts ...grpc.CallOption) (*Empty, error)
	// Change Password allows to change an existing password
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*Empty, error)
	// UserAddInvite sends an email invitation for sign up
	UserAddInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*Empty, error)
	// UserResetPasswordInvite sends an email invitation for resetting a user's password
	UserResetPasswordInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*Empty, error)
	// ValidateInvite validates url token sent for resetting password or sign Up
	ValidateInvite(ctx context.Context, in *ValidateInviteRequest, opts ...grpc.CallOption) (*ValidateEmailInviteResponse, error)
	// Returns metrics around the authenticated tenant account if the tenant is an admin or has access
	Metrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error)
	// List Buckets
	ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error)
	// Make a bucket
	MakeBucket(ctx context.Context, in *MakeBucketRequest, opts ...grpc.CallOption) (*Bucket, error)
	// Delete Bucket
	DeleteBucket(ctx context.Context, in *DeleteBucketRequest, opts ...grpc.CallOption) (*Bucket, error)
	// Change Bucket access control between private and public.
	ChangeBucketAccessControl(ctx context.Context, in *AccessControlRequest, opts ...grpc.CallOption) (*Empty, error)
	// User
	// List Users
	UserWhoAmI(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WhoAmIResponse, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	// Add a User
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error)
	// Disable a User
	DisableUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error)
	ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*Empty, error)
	// Enable a User
	EnableUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error)
	// Remove a User
	// To be depracated
	RemoveUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error)
	// Get details for an individual User
	InfoUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*User, error)
	// List ServiceAccounts
	ListServiceAccounts(ctx context.Context, in *ListServiceAccountsRequest, opts ...grpc.CallOption) (*ListServiceAccountsResponse, error)
	// Generates a ServiceAccount for the given user
	// This is the only time the secret key will be returned
	CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*CreateServiceAccountResponse, error)
	// Disable a ServiceAccount
	DisableServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*ServiceAccount, error)
	// Enable a ServiceAccount
	EnableServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*ServiceAccount, error)
	// Remove a ServiceAccount
	RemoveServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*Empty, error)
	// Get details of an individual ServiceAccount
	InfoServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*InfoServiceAccountResponse, error)
	// Updates a Service Account with the selected permissions
	UpdateServiceAccount(ctx context.Context, in *UpdateServiceAccountRequest, opts ...grpc.CallOption) (*InfoServiceAccountResponse, error)
	// Assign multiple permissions to this service account
	AssignPermissionsToServiceAccount(ctx context.Context, in *AddPermissionsSARequest, opts ...grpc.CallOption) (*Empty, error)
	// List Permissions
	ListPermissions(ctx context.Context, in *ListPermissionsRequest, opts ...grpc.CallOption) (*ListPermissionsResponse, error)
	// Add a Permission
	AddPermission(ctx context.Context, in *AddPermissionRequest, opts ...grpc.CallOption) (*Permission, error)
	// Remove a Permission
	RemovePermission(ctx context.Context, in *PermissionActionRequest, opts ...grpc.CallOption) (*Empty, error)
	// Update a Permission
	UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*Permission, error)
	// Get details of a Permission
	InfoPermission(ctx context.Context, in *PermissionActionRequest, opts ...grpc.CallOption) (*Permission, error)
	// Assign this permission to multiple service accounts
	AssignPermissionToMultipleServiceAccounts(ctx context.Context, in *MultiAddPermissionToSAsRequest, opts ...grpc.CallOption) (*MultiAddPermissionToSAsResponse, error)
	// Version returns the current version of the system components and storage groups
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error)
}

type publicAPIClient struct {
	cc *grpc.ClientConn
}

func NewPublicAPIClient(cc *grpc.ClientConn) PublicAPIClient {
	return &publicAPIClient{cc}
}

func (c *publicAPIClient) RegisterTenant(ctx context.Context, in *RegisterAccountRequest, opts ...grpc.CallOption) (*RegisterAccountResponse, error) {
	out := new(RegisterAccountResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/RegisterTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) Logout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) SetPassword(ctx context.Context, in *SetPasswordRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/SetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) UserAddInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/UserAddInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) UserResetPasswordInvite(ctx context.Context, in *InviteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/UserResetPasswordInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ValidateInvite(ctx context.Context, in *ValidateInviteRequest, opts ...grpc.CallOption) (*ValidateEmailInviteResponse, error) {
	out := new(ValidateEmailInviteResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ValidateInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) Metrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/Metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error) {
	out := new(ListBucketsResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ListBuckets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) MakeBucket(ctx context.Context, in *MakeBucketRequest, opts ...grpc.CallOption) (*Bucket, error) {
	out := new(Bucket)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/MakeBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) DeleteBucket(ctx context.Context, in *DeleteBucketRequest, opts ...grpc.CallOption) (*Bucket, error) {
	out := new(Bucket)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/DeleteBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ChangeBucketAccessControl(ctx context.Context, in *AccessControlRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ChangeBucketAccessControl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) UserWhoAmI(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WhoAmIResponse, error) {
	out := new(WhoAmIResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/UserWhoAmI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) DisableUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error) {
	out := new(UserActionResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/DisableUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) EnableUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error) {
	out := new(UserActionResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/EnableUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) RemoveUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*UserActionResponse, error) {
	out := new(UserActionResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/RemoveUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) InfoUser(ctx context.Context, in *UserActionRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/InfoUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ListServiceAccounts(ctx context.Context, in *ListServiceAccountsRequest, opts ...grpc.CallOption) (*ListServiceAccountsResponse, error) {
	out := new(ListServiceAccountsResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ListServiceAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*CreateServiceAccountResponse, error) {
	out := new(CreateServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/CreateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) DisableServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*ServiceAccount, error) {
	out := new(ServiceAccount)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/DisableServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) EnableServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*ServiceAccount, error) {
	out := new(ServiceAccount)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/EnableServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) RemoveServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/RemoveServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) InfoServiceAccount(ctx context.Context, in *ServiceAccountActionRequest, opts ...grpc.CallOption) (*InfoServiceAccountResponse, error) {
	out := new(InfoServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/InfoServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) UpdateServiceAccount(ctx context.Context, in *UpdateServiceAccountRequest, opts ...grpc.CallOption) (*InfoServiceAccountResponse, error) {
	out := new(InfoServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/UpdateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) AssignPermissionsToServiceAccount(ctx context.Context, in *AddPermissionsSARequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/AssignPermissionsToServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) ListPermissions(ctx context.Context, in *ListPermissionsRequest, opts ...grpc.CallOption) (*ListPermissionsResponse, error) {
	out := new(ListPermissionsResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/ListPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) AddPermission(ctx context.Context, in *AddPermissionRequest, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/AddPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) RemovePermission(ctx context.Context, in *PermissionActionRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/RemovePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/UpdatePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) InfoPermission(ctx context.Context, in *PermissionActionRequest, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/InfoPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) AssignPermissionToMultipleServiceAccounts(ctx context.Context, in *MultiAddPermissionToSAsRequest, opts ...grpc.CallOption) (*MultiAddPermissionToSAsResponse, error) {
	out := new(MultiAddPermissionToSAsResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/AssignPermissionToMultipleServiceAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicAPIClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/m3.PublicAPI/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicAPIServer is the server API for PublicAPI service.
type PublicAPIServer interface {
	// Registers a new Tenant and a Tenant Admin account
	RegisterTenant(context.Context, *RegisterAccountRequest) (*RegisterAccountResponse, error)
	// Login
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// Logout
	Logout(context.Context, *Empty) (*Empty, error)
	// Set Password Used for Signing Up a new User and Resetting a Password
	SetPassword(context.Context, *SetPasswordRequest) (*Empty, error)
	// Change Password allows to change an existing password
	ChangePassword(context.Context, *ChangePasswordRequest) (*Empty, error)
	// UserAddInvite sends an email invitation for sign up
	UserAddInvite(context.Context, *InviteRequest) (*Empty, error)
	// UserResetPasswordInvite sends an email invitation for resetting a user's password
	UserResetPasswordInvite(context.Context, *InviteRequest) (*Empty, error)
	// ValidateInvite validates url token sent for resetting password or sign Up
	ValidateInvite(context.Context, *ValidateInviteRequest) (*ValidateEmailInviteResponse, error)
	// Returns metrics around the authenticated tenant account if the tenant is an admin or has access
	Metrics(context.Context, *MetricsRequest) (*MetricsResponse, error)
	// List Buckets
	ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error)
	// Make a bucket
	MakeBucket(context.Context, *MakeBucketRequest) (*Bucket, error)
	// Delete Bucket
	DeleteBucket(context.Context, *DeleteBucketRequest) (*Bucket, error)
	// Change Bucket access control between private and public.
	ChangeBucketAccessControl(context.Context, *AccessControlRequest) (*Empty, error)
	// User
	// List Users
	UserWhoAmI(context.Context, *Empty) (*WhoAmIResponse, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	// Add a User
	AddUser(context.Context, *AddUserRequest) (*User, error)
	// Disable a User
	DisableUser(context.Context, *UserActionRequest) (*UserActionResponse, error)
	ForgotPassword(context.Context, *ForgotPasswordRequest) (*Empty, error)
	// Enable a User
	EnableUser(context.Context, *UserActionRequest) (*UserActionResponse, error)
	// Remove a User
	// To be depracated
	RemoveUser(context.Context, *UserActionRequest) (*UserActionResponse, error)
	// Get details for an individual User
	InfoUser(context.Context, *UserActionRequest) (*User, error)
	// List ServiceAccounts
	ListServiceAccounts(context.Context, *ListServiceAccountsRequest) (*ListServiceAccountsResponse, error)
	// Generates a ServiceAccount for the given user
	// This is the only time the secret key will be returned
	CreateServiceAccount(context.Context, *CreateServiceAccountRequest) (*CreateServiceAccountResponse, error)
	// Disable a ServiceAccount
	DisableServiceAccount(context.Context, *ServiceAccountActionRequest) (*ServiceAccount, error)
	// Enable a ServiceAccount
	EnableServiceAccount(context.Context, *ServiceAccountActionRequest) (*ServiceAccount, error)
	// Remove a ServiceAccount
	RemoveServiceAccount(context.Context, *ServiceAccountActionRequest) (*Empty, error)
	// Get details of an individual ServiceAccount
	InfoServiceAccount(context.Context, *ServiceAccountActionRequest) (*InfoServiceAccountResponse, error)
	// Updates a Service Account with the selected permissions
	UpdateServiceAccount(context.Context, *UpdateServiceAccountRequest) (*InfoServiceAccountResponse, error)
	// Assign multiple permissions to this service account
	AssignPermissionsToServiceAccount(context.Context, *AddPermissionsSARequest) (*Empty, error)
	// List Permissions
	ListPermissions(context.Context, *ListPermissionsRequest) (*ListPermissionsResponse, error)
	// Add a Permission
	AddPermission(context.Context, *AddPermissionRequest) (*Permission, error)
	// Remove a Permission
	RemovePermission(context.Context, *PermissionActionRequest) (*Empty, error)
	// Update a Permission
	UpdatePermission(context.Context, *UpdatePermissionRequest) (*Permission, error)
	// Get details of a Permission
	InfoPermission(context.Context, *PermissionActionRequest) (*Permission, error)
	// Assign this permission to multiple service accounts
	AssignPermissionToMultipleServiceAccounts(context.Context, *MultiAddPermissionToSAsRequest) (*MultiAddPermissionToSAsResponse, error)
	// Version returns the current version of the system components and storage groups
	Version(context.Context, *Empty) (*VersionResponse, error)
}

// UnimplementedPublicAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPublicAPIServer struct {
}

func (*UnimplementedPublicAPIServer) RegisterTenant(ctx context.Context, req *RegisterAccountRequest) (*RegisterAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTenant not implemented")
}
func (*UnimplementedPublicAPIServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedPublicAPIServer) Logout(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedPublicAPIServer) SetPassword(ctx context.Context, req *SetPasswordRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPassword not implemented")
}
func (*UnimplementedPublicAPIServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedPublicAPIServer) UserAddInvite(ctx context.Context, req *InviteRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAddInvite not implemented")
}
func (*UnimplementedPublicAPIServer) UserResetPasswordInvite(ctx context.Context, req *InviteRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserResetPasswordInvite not implemented")
}
func (*UnimplementedPublicAPIServer) ValidateInvite(ctx context.Context, req *ValidateInviteRequest) (*ValidateEmailInviteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateInvite not implemented")
}
func (*UnimplementedPublicAPIServer) Metrics(ctx context.Context, req *MetricsRequest) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Metrics not implemented")
}
func (*UnimplementedPublicAPIServer) ListBuckets(ctx context.Context, req *ListBucketsRequest) (*ListBucketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuckets not implemented")
}
func (*UnimplementedPublicAPIServer) MakeBucket(ctx context.Context, req *MakeBucketRequest) (*Bucket, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeBucket not implemented")
}
func (*UnimplementedPublicAPIServer) DeleteBucket(ctx context.Context, req *DeleteBucketRequest) (*Bucket, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBucket not implemented")
}
func (*UnimplementedPublicAPIServer) ChangeBucketAccessControl(ctx context.Context, req *AccessControlRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeBucketAccessControl not implemented")
}
func (*UnimplementedPublicAPIServer) UserWhoAmI(ctx context.Context, req *Empty) (*WhoAmIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserWhoAmI not implemented")
}
func (*UnimplementedPublicAPIServer) ListUsers(ctx context.Context, req *ListUsersRequest) (*ListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedPublicAPIServer) AddUser(ctx context.Context, req *AddUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedPublicAPIServer) DisableUser(ctx context.Context, req *UserActionRequest) (*UserActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableUser not implemented")
}
func (*UnimplementedPublicAPIServer) ForgotPassword(ctx context.Context, req *ForgotPasswordRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForgotPassword not implemented")
}
func (*UnimplementedPublicAPIServer) EnableUser(ctx context.Context, req *UserActionRequest) (*UserActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableUser not implemented")
}
func (*UnimplementedPublicAPIServer) RemoveUser(ctx context.Context, req *UserActionRequest) (*UserActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}
func (*UnimplementedPublicAPIServer) InfoUser(ctx context.Context, req *UserActionRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InfoUser not implemented")
}
func (*UnimplementedPublicAPIServer) ListServiceAccounts(ctx context.Context, req *ListServiceAccountsRequest) (*ListServiceAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServiceAccounts not implemented")
}
func (*UnimplementedPublicAPIServer) CreateServiceAccount(ctx context.Context, req *CreateServiceAccountRequest) (*CreateServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) DisableServiceAccount(ctx context.Context, req *ServiceAccountActionRequest) (*ServiceAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) EnableServiceAccount(ctx context.Context, req *ServiceAccountActionRequest) (*ServiceAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) RemoveServiceAccount(ctx context.Context, req *ServiceAccountActionRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) InfoServiceAccount(ctx context.Context, req *ServiceAccountActionRequest) (*InfoServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InfoServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) UpdateServiceAccount(ctx context.Context, req *UpdateServiceAccountRequest) (*InfoServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) AssignPermissionsToServiceAccount(ctx context.Context, req *AddPermissionsSARequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignPermissionsToServiceAccount not implemented")
}
func (*UnimplementedPublicAPIServer) ListPermissions(ctx context.Context, req *ListPermissionsRequest) (*ListPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPermissions not implemented")
}
func (*UnimplementedPublicAPIServer) AddPermission(ctx context.Context, req *AddPermissionRequest) (*Permission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPermission not implemented")
}
func (*UnimplementedPublicAPIServer) RemovePermission(ctx context.Context, req *PermissionActionRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePermission not implemented")
}
func (*UnimplementedPublicAPIServer) UpdatePermission(ctx context.Context, req *UpdatePermissionRequest) (*Permission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePermission not implemented")
}
func (*UnimplementedPublicAPIServer) InfoPermission(ctx context.Context, req *PermissionActionRequest) (*Permission, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InfoPermission not implemented")
}
func (*UnimplementedPublicAPIServer) AssignPermissionToMultipleServiceAccounts(ctx context.Context, req *MultiAddPermissionToSAsRequest) (*MultiAddPermissionToSAsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignPermissionToMultipleServiceAccounts not implemented")
}
func (*UnimplementedPublicAPIServer) Version(ctx context.Context, req *Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterPublicAPIServer(s *grpc.Server, srv PublicAPIServer) {
	s.RegisterService(&_PublicAPI_serviceDesc, srv)
}

func _PublicAPI_RegisterTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).RegisterTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/RegisterTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).RegisterTenant(ctx, req.(*RegisterAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).Logout(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_SetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).SetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/SetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).SetPassword(ctx, req.(*SetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_UserAddInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).UserAddInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/UserAddInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).UserAddInvite(ctx, req.(*InviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_UserResetPasswordInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).UserResetPasswordInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/UserResetPasswordInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).UserResetPasswordInvite(ctx, req.(*InviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ValidateInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ValidateInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ValidateInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ValidateInvite(ctx, req.(*ValidateInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_Metrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).Metrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/Metrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).Metrics(ctx, req.(*MetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ListBuckets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBucketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ListBuckets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ListBuckets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ListBuckets(ctx, req.(*ListBucketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_MakeBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).MakeBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/MakeBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).MakeBucket(ctx, req.(*MakeBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_DeleteBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).DeleteBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/DeleteBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).DeleteBucket(ctx, req.(*DeleteBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ChangeBucketAccessControl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessControlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ChangeBucketAccessControl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ChangeBucketAccessControl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ChangeBucketAccessControl(ctx, req.(*AccessControlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_UserWhoAmI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).UserWhoAmI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/UserWhoAmI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).UserWhoAmI(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_DisableUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).DisableUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/DisableUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).DisableUser(ctx, req.(*UserActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgotPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ForgotPassword(ctx, req.(*ForgotPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_EnableUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).EnableUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/EnableUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).EnableUser(ctx, req.(*UserActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/RemoveUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).RemoveUser(ctx, req.(*UserActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_InfoUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).InfoUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/InfoUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).InfoUser(ctx, req.(*UserActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ListServiceAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ListServiceAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ListServiceAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ListServiceAccounts(ctx, req.(*ListServiceAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_CreateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).CreateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/CreateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).CreateServiceAccount(ctx, req.(*CreateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_DisableServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).DisableServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/DisableServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).DisableServiceAccount(ctx, req.(*ServiceAccountActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_EnableServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).EnableServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/EnableServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).EnableServiceAccount(ctx, req.(*ServiceAccountActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_RemoveServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).RemoveServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/RemoveServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).RemoveServiceAccount(ctx, req.(*ServiceAccountActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_InfoServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceAccountActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).InfoServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/InfoServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).InfoServiceAccount(ctx, req.(*ServiceAccountActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_UpdateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).UpdateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/UpdateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).UpdateServiceAccount(ctx, req.(*UpdateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_AssignPermissionsToServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPermissionsSARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).AssignPermissionsToServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/AssignPermissionsToServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).AssignPermissionsToServiceAccount(ctx, req.(*AddPermissionsSARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_ListPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).ListPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/ListPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).ListPermissions(ctx, req.(*ListPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_AddPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).AddPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/AddPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).AddPermission(ctx, req.(*AddPermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_RemovePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).RemovePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/RemovePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).RemovePermission(ctx, req.(*PermissionActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_UpdatePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).UpdatePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/UpdatePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).UpdatePermission(ctx, req.(*UpdatePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_InfoPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).InfoPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/InfoPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).InfoPermission(ctx, req.(*PermissionActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_AssignPermissionToMultipleServiceAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiAddPermissionToSAsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).AssignPermissionToMultipleServiceAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/AssignPermissionToMultipleServiceAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).AssignPermissionToMultipleServiceAccounts(ctx, req.(*MultiAddPermissionToSAsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicAPI_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAPIServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m3.PublicAPI/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAPIServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "m3.PublicAPI",
	HandlerType: (*PublicAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterTenant",
			Handler:    _PublicAPI_RegisterTenant_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _PublicAPI_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _PublicAPI_Logout_Handler,
		},
		{
			MethodName: "SetPassword",
			Handler:    _PublicAPI_SetPassword_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _PublicAPI_ChangePassword_Handler,
		},
		{
			MethodName: "UserAddInvite",
			Handler:    _PublicAPI_UserAddInvite_Handler,
		},
		{
			MethodName: "UserResetPasswordInvite",
			Handler:    _PublicAPI_UserResetPasswordInvite_Handler,
		},
		{
			MethodName: "ValidateInvite",
			Handler:    _PublicAPI_ValidateInvite_Handler,
		},
		{
			MethodName: "Metrics",
			Handler:    _PublicAPI_Metrics_Handler,
		},
		{
			MethodName: "ListBuckets",
			Handler:    _PublicAPI_ListBuckets_Handler,
		},
		{
			MethodName: "MakeBucket",
			Handler:    _PublicAPI_MakeBucket_Handler,
		},
		{
			MethodName: "DeleteBucket",
			Handler:    _PublicAPI_DeleteBucket_Handler,
		},
		{
			MethodName: "ChangeBucketAccessControl",
			Handler:    _PublicAPI_ChangeBucketAccessControl_Handler,
		},
		{
			MethodName: "UserWhoAmI",
			Handler:    _PublicAPI_UserWhoAmI_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _PublicAPI_ListUsers_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _PublicAPI_AddUser_Handler,
		},
		{
			MethodName: "DisableUser",
			Handler:    _PublicAPI_DisableUser_Handler,
		},
		{
			MethodName: "ForgotPassword",
			Handler:    _PublicAPI_ForgotPassword_Handler,
		},
		{
			MethodName: "EnableUser",
			Handler:    _PublicAPI_EnableUser_Handler,
		},
		{
			MethodName: "RemoveUser",
			Handler:    _PublicAPI_RemoveUser_Handler,
		},
		{
			MethodName: "InfoUser",
			Handler:    _PublicAPI_InfoUser_Handler,
		},
		{
			MethodName: "ListServiceAccounts",
			Handler:    _PublicAPI_ListServiceAccounts_Handler,
		},
		{
			MethodName: "CreateServiceAccount",
			Handler:    _PublicAPI_CreateServiceAccount_Handler,
		},
		{
			MethodName: "DisableServiceAccount",
			Handler:    _PublicAPI_DisableServiceAccount_Handler,
		},
		{
			MethodName: "EnableServiceAccount",
			Handler:    _PublicAPI_EnableServiceAccount_Handler,
		},
		{
			MethodName: "RemoveServiceAccount",
			Handler:    _PublicAPI_RemoveServiceAccount_Handler,
		},
		{
			MethodName: "InfoServiceAccount",
			Handler:    _PublicAPI_InfoServiceAccount_Handler,
		},
		{
			MethodName: "UpdateServiceAccount",
			Handler:    _PublicAPI_UpdateServiceAccount_Handler,
		},
		{
			MethodName: "AssignPermissionsToServiceAccount",
			Handler:    _PublicAPI_AssignPermissionsToServiceAccount_Handler,
		},
		{
			MethodName: "ListPermissions",
			Handler:    _PublicAPI_ListPermissions_Handler,
		},
		{
			MethodName: "AddPermission",
			Handler:    _PublicAPI_AddPermission_Handler,
		},
		{
			MethodName: "RemovePermission",
			Handler:    _PublicAPI_RemovePermission_Handler,
		},
		{
			MethodName: "UpdatePermission",
			Handler:    _PublicAPI_UpdatePermission_Handler,
		},
		{
			MethodName: "InfoPermission",
			Handler:    _PublicAPI_InfoPermission_Handler,
		},
		{
			MethodName: "AssignPermissionToMultipleServiceAccounts",
			Handler:    _PublicAPI_AssignPermissionToMultipleServiceAccounts_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _PublicAPI_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "public_api.proto",
}
