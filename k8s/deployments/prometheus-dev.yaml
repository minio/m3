---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: default
data:
  prometheus.yaml: |-
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: minio-metrics
        metrics_path: /minio/prometheus/metrics
        scheme: http
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            - default
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_sg]
          separator: ;
          regex: (storage-group.*)
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          separator: ;
          regex: (sg-.*)
          replacement: $1
          action: keep
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-role
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
      - ingresses/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus
  template:
    metadata:
      labels:
        name: prometheus
    spec:
      containers:
        - args:
            - --config.file=/etc/prometheus/prometheus.yaml
            - --storage.tsdb.path=/prometheus/
          image: quay.io/prometheus/prometheus:v2.14.0
          imagePullPolicy: IfNotPresent
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yaml
              name: prometheus-config-volume
              subPath: prometheus.yaml
            - mountPath: /prometheus
              name: prometheus-storage-volume
      volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-storage-volume
---
