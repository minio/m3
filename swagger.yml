swagger: "2.0"
info:
  title: MinIO For Kubernetes
  version: 0.1.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
basePath: /api/v1
# We are going to be taking `Authorization: Bearer TOKEN` header for our authentication
securityDefinitions:
  key:
    type: oauth2
    flow: accessCode
    authorizationUrl: http://min.io
    tokenUrl: http://min.io
# Apply the key security definition to all APIs
security:
  - key: []
paths:
  /tenants:
    get:
      summary: List Tenants
      operationId: ListTenants
      parameters:
        - name: sort_by
          in: query
          required: false
          type: string
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: A successful response.
          schema:
            $ref: "#/definitions/listTenantsResponse"
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI
    post:
      summary: Create Tenant
      operationId: CreateTenant
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/createTenantRequest"
      responses:
        201:
          description: A successful response.
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI

  /tenants/{name}:
    get:
      summary: Tenant Info
      operationId: TenantInfo
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: A successful response.
          schema:
            $ref: "#/definitions/tenant"
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI
    delete:
      summary: Delete Tenant
      operationId: DeleteTenant
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        204:
          description: A successful response.
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI
    put:
      summary: Update Tenant
      operationId: UpdateTenant
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/updateTenantRequest"
      responses:
        201:
          description: A successful response.
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI

  /storage-classes:
    get:
      summary: List Storage Classes
      operationId: ListStorageClasses
      responses:
        200:
          description: A successful response.
          schema:
            $ref: "#/definitions/storageClasses"
        default:
          description: Generic error response.
          schema:
            $ref: "#/definitions/error"
      tags:
        - AdminAPI

definitions:
  tenant:
    type: object
    properties:
      name:
        type: string
      zone_count:
        type: integer
      instance_count:
        type: integer
      volume_size:
        type: integer
      volume_count:
        type: integer
      volumes_per_server:
        type: integer
      creation_date:
        type: string
      currentState:
        type: string
      zones:
        type: array
        items:
          $ref: "#/definitions/zone"
  tenantList:
    type: object
    properties:
      name:
        type: string
      zone_count:
        type: integer
      instance_count:
        type: integer
      volume_size:
        type: integer
      volume_count:
        type: integer
      creation_date:
        type: string
      currentState:
        type: string
  listTenantsResponse:
    type: object
    properties:
      tenants:
        type: array
        items:
          $ref: "#/definitions/tenantList"
        title: list of resulting tenants
      total:
        type: integer
        format: int64
        title: number of tenants accessible to tenant user
  updateTenantRequest:
    type: object
    properties:
      image:
        type: string
        pattern: "^((.*?)/(.*?):(.+))$"
  createTenantRequest:
    type: object
    required:
      - name
      - volume_configuration
    properties:
      name:
        type: string
        pattern: "^[a-z0-9-]{3,63}$"
      image:
        type: string
      service_name:
        type: string
      zones:
        type: array
        items:
          $ref: "#/definitions/zone"
      volumes_per_server:
        type: integer
      volume_configuration:
        type: object
        required:
          - size
        properties:
          size:
            type: string
          storage_class:
            type: string
      mounth_path:
        type: string
      access_key:
        type: string
      secret_key:
        type: string
      enable_mcs:
        type: boolean
        default: true
      enable_ssl:
        type: boolean
        default: true
  zone:
    type: object
    properties:
      name:
        type: string
      servers:
        type: integer

  storageClasses:
    type: array
    items:
      type: string

  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  # Structure that holds the `Bearer {TOKEN}` present on authenticated requests
  principal:
    type: string
